package com.candidate.test.product.dto;

import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Simple DTO representation of a Product
 *<br>
 * A product has a numeric identifier,
 * a name with at least 4 characters and no more than 80,
 * an optional description and
 * a flag indicating if it is in stock.
 * A product can only be sold from one warehouse at a time but may be transferred from one warehouse to another.
 *<br>
 * NOTE: We are deferring Lombok because we are not sure all the developers have the JAR configured.
 */
public class ProductDTO {

    /**
     * A product has a numeric identifier. The ID will be autogenerated
     */
    @Schema(name = "id", example = "1", requiredMode = Schema.RequiredMode.REQUIRED)
    private Long id;

    /**
     * name with at least 4 characters and no more than 80,
     */
    @Schema(name = "name", example = "PROD1", requiredMode = Schema.RequiredMode.REQUIRED)
    private String name;

    /**
     * optional description and a flag indicating if it is in stock.
     */
    @Schema(name = "description", example = "PRODUCT1 DESC", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
    private String description;

    /**
     * a flag indicating if it is in stock.
     */
    @Schema(name = "isInStock", example = "false", defaultValue= "false", requiredMode = Schema.RequiredMode.REQUIRED)
    private Boolean isInStock;

    /**
     * Foreign key to the warehouse. If the product's warehouse is UNKNOWN then we will assign a 0L
     */
    @Schema(name = "warehouseId", example = "1", requiredMode = Schema.RequiredMode.REQUIRED)
    private Long warehouseId;

    public ProductDTO(Long id, String name, String description, Boolean isInStock, Long warehouseId) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.isInStock = isInStock;
        this.warehouseId = warehouseId;
    }

    /**
     * For zero arg construction we will default isInStock to false
     * and warehouseId to 0L
     */
    public ProductDTO() {
        this.isInStock = false;
        this.warehouseId = 0L;
    }
    /**
     * For identity construction we will default isInStock to false
     * and warehouseId to 0L
     */
    public ProductDTO(Long id) {
        this.id = id;
        this.isInStock = false;
        this.warehouseId = 0L;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Boolean getInStock() {
        return isInStock;
    }

    public void setInStock(Boolean inStock) {
        isInStock = inStock;
    }

    public Long getWarehouseId() {
        return warehouseId;
    }

    public void setWarehouseId(Long warehouseId) {
        this.warehouseId = warehouseId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProductDTO that)) return false;
        return  Objects.equals(id, that.id) &&
                Objects.equals(name, that.name) &&
                Objects.equals(description, that.description) &&
                Objects.equals(warehouseId, that.warehouseId) &&
                Objects.equals(isInStock, that.isInStock);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, description, isInStock,warehouseId);
    }

    @Override
    public String toString() {
        return "ProductDTO{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", description='" + description + '\'' +
                ", isInStock='" + isInStock + '\'' +
                ", wareHouseId='" + warehouseId + '\'' +
                '}';
    }
}
